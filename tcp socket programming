//server
import socket
s = socket.socket()
print("Socket successfully created")
port = 12345
s.bind(('',port))
print("Socket binded to port %s" %(port))
print(f"Socket binded to port {port}")
s.listen(5)
while True:
    c,addr = s.accept()
    print(f"Got connection from {addr}")
    c.send('Thank you for connecting\n'.encode())
    break
c.close()


or

1. Create a socket using socket.AF_INET and socket.SOCK_STREAM.
2. Bind the socket to a specific IP address and port.
3. Listen for incoming connections with listen().
4. Accept a connection and establish a client-server communication channel.
5. Send/Receive data.
6. Close the connection.
Code
import socket
# Create TCP socket
server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
# Bind the socket to an IP and port
server_socket.bind(('localhost', 12345))
# Listen for incoming connections
server_socket.listen(1)
print("Server is listening on port 12345...")
# Accept a connection from a client
client_socket, address = server_socket.accept()
print(f"Connection from {address} has been established.")
# Receive data from the client
data = client_socket.recv(1024).decode()
print(f"Received from client: {data}")
# Send data to the client
client_socket.send("Hello from server!".encode())
# Close connections
client_socket.close()
server_socket.close()

//client

import socket
s=socket.socket()
port = 12345
s.connect(('localhost',port))
print(s.recv(1024).decode())
s.close()

or

TCP Client
1. Create a socket with AF_INET and SOCK_STREAM.
2. Connect to the serverâ€™s IP and port.
3. Send/Receive data.
4. Close the socket.
Code
import socket
# Create TCP socket
client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
# Connect to the server
client_socket.connect(('localhost', 12345))
# Send data to the server
client_socket.send("Hello from client!".encode())
# Receive data from the server
data = client_socket.recv(1024).decode()
print(f"Received from server: {data}")
# Close the connection
client_socket.close()
